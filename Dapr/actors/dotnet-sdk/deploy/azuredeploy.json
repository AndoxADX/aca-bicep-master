{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "canadacentral"
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "[concat('ContainerAppEnv-', uniqueString(resourceGroup().id))]"
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "[concat('LAWorkspace-', uniqueString(resourceGroup().id))]"
    },
    "workspaceLocation": {
      "type": "string",
      "defaultValue": "canadacentral"
    },
    "redisCacheName": {
      "type": "string",
      "defaultValue": "[format('redisCache-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specify the name of the Azure Redis Cache to create."
      }
    },
    "redisCacheSKU": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Specify the pricing tier of the new Azure Redis Cache."
      }
    },
    "redisCacheFamily": {
      "type": "string",
      "defaultValue": "C",
      "allowedValues": [
        "C",
        "P"
      ],
      "metadata": {
        "description": "Specify the family for the sku. C = Basic/Standard, P = Premium."
      }
    },
    "redisCacheCapacity": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "metadata": {
        "description": "Specify the size of the new Azure Redis Cache instance. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
      }
    },
    "enableNonSslPort": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify a boolean value that indicates whether to allow access via non-SSL ports."
      }
    },
    "actorserviceCI": {
      "type": "string",
      "defaultValue": "docker.io/gfakedocker/actorservicedotnet:latest"
    },
    "actorclientCI": {
      "type": "string",
      "defaultValue": "docker.io/gfakedocker/actorclientdotnet:latest"
    },
    "actorservice": {
      "type": "string",
      "defaultValue": "actorservicedotnet"
    },
    "actorclient": {
      "type": "string",
      "defaultValue": "actorclientdotnet"
    },
    "actorserviceId": {
      "type": "string",
      "defaultValue": "myactorservice"
    },
    "actorclientId": {
      "type": "string",
      "defaultValue": "myactorclient"
    },
    "statestore": {
      "type": "string",
      "defaultValue": "mystatestore"
    }
  },
  "variables": {
    "APP_PORT": "5000"
  },
  "resources": [
    {
      "type": "Microsoft.Cache/redis",
      "apiVersion": "2020-06-01",
      "name": "[parameters('redisCacheName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enableNonSslPort": "[parameters('enableNonSslPort')]",
        "minimumTlsVersion": "1.2",
        "sku": {
          "capacity": "[parameters('redisCacheCapacity')]",
          "family": "[parameters('redisCacheFamily')]",
          "name": "[parameters('redisCacheSKU')]"
        }
      }
    },
    {
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspaceName')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "location": "[parameters('workspaceLocation')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "apiVersion": "2022-01-01-preview",
      "name": "[parameters('environmentName')]",
      "type": "Microsoft.App/managedEnvironments",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      ],
      "properties": {
        "type": "managed",
        "internalLoadBalancerEnabled": false,
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2020-08-01').customerId]",
            "sharedKey": "[listKeys(concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2020-08-01').primarySharedKey]"
          }
        }
      }
    },
    {
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.App/managedEnvironments/daprComponents",
      "name": "[concat(parameters('environmentName'), '/', parameters('statestore'))]",
      "dependsOn": [
        "[concat('Microsoft.App/managedEnvironments/', parameters('environmentName'))]",
        "[parameters('redisCacheName')]"
      ],
      "properties": {
        "componentType": "state.redis",
        "version": "v1",
        "ignoreErrors": false,
        "initTimeout": "50s",
        "secrets": [
          {
            "name": "redishostsecret",
            "value": "[concat(reference(parameters('redisCacheName')).hostName, ':6380')]"
          },
          {
            "name": "redispasswordsecret",
            "value": "[listKeys(parameters('redisCacheName'), '2020-12-01').secondaryKey]"
          }
        ],
        "metadata": [
          {
            "name": "redisHost",
            "secretRef": "redishostsecret"
          },
          {
            "name": "redisPassword",
            "secretRef": "redispasswordsecret"
          },
          {
            "name": "enableTLS",
            "value": "true"
          },
          {
            "name": "actorStateStore",
            "value": "true"
          }
        ],
        "scopes": [
          "[parameters('actorserviceId')]",
          "[parameters('actorclientId')]"
        ]
      }
    },
    {
      "name": "[parameters('actorservice')]",
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), parameters('statestore'))]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "ingress": {
            "external": false,
            "targetPort": "[variables('APP_PORT')]"
          },
          "dapr": {
            "enabled": true,
            "appPort": "[variables('APP_PORT')]",
            "appId": "[parameters('actorserviceId')]"
          }
        },
        "template": {
          "containers": [
            {
              "name": "[parameters('actorservice')]",
              "image": "[parameters('actorserviceCI')]"
            }
          ],
          "scale": {
            "minReplicas": "1",
            "maxReplicas": "10",
            "rules": [
              {
                "name": "httpscalingrule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "100"
                  }
                }
              }
            ]
          },
          "dapr": {
            "enabled": true,
            "appPort": "[variables('APP_PORT')]",
            "appId": "[parameters('actorserviceId')]",
            "components": [
              {
                "name": "[parameters('statestore')]",
                "type": "state.redis",
                "version": "v1",
                "metadata": [
                  {
                    "name": "redisHost",
                    "secretRef": "redishostsecret"
                  },
                  {
                    "name": "redisPassword",
                    "secretRef": "redispasswordsecret"
                  },
                  {
                    "name": "enableTLS",
                    "value": "true"
                  },
                  {
                    "name": "actorStateStore",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "name": "[parameters('actorclient')]",
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[parameters('actorservice')]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": "[variables('APP_PORT')]"
          },
          "secrets": [
          ],
          "dapr": {
            "enabled": true,
            "appPort": "[variables('APP_PORT')]",
            "appId": "[parameters('actorclientId')]"
          }
        },
        "template": {
          "containers": [
            {
              "name": "[parameters('actorclient')]",
              "image": "[parameters('actorclientCI')]",
              "env": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "Production"
                }
              ]
            }
          ]
        }
      }
    }
  ]
}